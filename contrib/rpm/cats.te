policy_module(cats, 1.100.1)

########################################
#
# Declarations
#

type cats_t;
type cats_exec_t;
init_daemon_domain(cats_t, cats_exec_t)

permissive cats_t;

type cats_initrc_exec_t;
init_script_file(cats_initrc_exec_t)

type cats_conf_t;
files_type(cats_conf_t)

type cats_var_lib_t;
files_type(cats_var_lib_t)

type cats_var_run_t;
files_type(cats_var_run_t)

type cats_port_t;
corenet_port(cats_port_t)

########################################
#
# cats local policy
#
allow cats_t self:process { fork };

allow cats_t self:fifo_file rw_fifo_file_perms;
allow cats_t self:unix_stream_socket create_stream_socket_perms;

manage_dirs_pattern(cats_t, cats_conf_t, cats_conf_t)
manage_files_pattern(cats_t, cats_conf_t, cats_conf_t)

manage_dirs_pattern(cats_t, cats_var_lib_t, cats_var_lib_t)
manage_files_pattern(cats_t, cats_var_lib_t, cats_var_lib_t)
files_var_lib_filetrans(cats_t, cats_var_lib_t, { dir file })

manage_dirs_pattern(cats_t, cats_var_run_t, cats_var_run_t)
manage_files_pattern(cats_t, cats_var_run_t, cats_var_run_t)

sysnet_dns_name_resolve(cats_t)
corenet_all_recvfrom_unlabeled(cats_t)

allow cats_t self:tcp_socket create_stream_socket_perms;
corenet_tcp_sendrecv_generic_if(cats_t)
corenet_tcp_sendrecv_generic_node(cats_t)
corenet_tcp_sendrecv_all_ports(cats_t)
corenet_tcp_bind_generic_node(cats_t)

gen_require(`
    type cats_port_t;
')
allow cats_t cats_port_t:tcp_socket name_bind;

gen_require(`
    type cats_port_t;
')
allow cats_t cats_port_t:tcp_socket name_connect;

domain_use_interactive_fds(cats_t)

files_read_etc_files(cats_t)

miscfiles_read_localization(cats_t)

sysnet_dns_name_resolve(cats_t)

allow cats_t cats_exec_t:file execute_no_trans;
allow cats_t self:process setsched;
corecmd_exec_ls(cats_t)
corenet_tcp_connect_http_port(cats_t)
dev_read_urand(cats_t)
fs_getattr_xattr_fs(cats_t)
kernel_read_system_state(cats_t)
